{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/youtube-search/src/Login.js\";\nimport React, { Component } from 'react';\n\nvar firebase = require('firebase'); // Your web app's Firebase configuration\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCUkh3vZCBcZqjfAnCRrQmV-W6KPYQ-VbM\",\n  authDomain: \"kimaia-5807f.firebaseapp.com\",\n  databaseURL: \"https://kimaia-5807f.firebaseio.com\",\n  projectId: \"kimaia-5807f\",\n  storageBucket: \"kimaia-5807f.appspot.com\",\n  messagingSenderId: \"169231303917\",\n  appId: \"1:169231303917:web:0913e201bfe5cc1d02b8e4\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\n\nclass Login extends Component {\n  login(event) {\n    const email = this.refs.email.value;\n    const password = this.refs.password.value;\n    console.log(email, password);\n    const auth = firebase.auth();\n    const promise = auth.signInWithEmailAndPassword(email, password);\n    promise.then(user => {\n      var lout = document.getElementById('logout'); //Write a welcome message for user\n\n      lout.classList.remove('hide');\n    });\n    promise.catch(e => {\n      var err = e.message;\n      console.log(err);\n      this.setState({\n        err: err\n      });\n    });\n  }\n\n  signup() {\n    const email = this.refs.email.value;\n    const password = this.refs.password.value;\n    console.log(email, password);\n    const auth = firebase.auth();\n    const promise = auth.createUserWithEmailAndPassword(email, password);\n    promise.then(user => {\n      var err = \"Welcome \" + email;\n      firebase.database().ref('users/' + user.uid).set({\n        email: email\n      });\n      console.log(user);\n      this.setState({\n        err: err\n      });\n    });\n    promise.catch(e => {\n      var err = e.message;\n      console.log(err);\n      this.setState({\n        err: err\n      });\n    });\n  }\n\n  logout() {\n    firebase.auth().signOut();\n    var lout = document.getElementById('logout'); //Write a thanks message for user\n\n    lout.classList.add('hide');\n  }\n\n  google() {\n    console.log(\"I am in google method\");\n    var provider = new firebase.auth.GoogleAuthProvider();\n    var promise = firebase.auth().signInWithPopup(provider);\n    promise.then(result => {\n      var user = result.user;\n      console.log(result);\n      firebase.database().ref('users/' + user.uid).set({\n        email: user.email,\n        name: user.displayName\n      });\n    });\n    promise.catch(e => {\n      var msg = e.message;\n      console.log(msg);\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      err: ''\n    };\n    this.login = this.login.bind(this);\n    this.signup = this.signup.bind(this);\n    this.logout = this.logout.bind(this);\n    this.google = this.google.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-inner form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"email\",\n      ref: \"email\",\n      type: \"email\",\n      placeholder: \"Enter your email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"pass\",\n      ref: \"password\",\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.err), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(\"button\", {\n      onClick: this.signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"button\", {\n      onClick: this.logout,\n      id: \"logout\",\n      className: \"hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Log out\"))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/youtube-search/src/Login.js"],"names":["React","Component","firebase","require","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","Login","login","event","email","refs","value","password","console","log","auth","promise","signInWithEmailAndPassword","then","user","lout","document","getElementById","classList","remove","catch","e","err","message","setState","signup","createUserWithEmailAndPassword","database","ref","uid","set","logout","signOut","add","google","provider","GoogleAuthProvider","signInWithPopup","result","name","displayName","msg","constructor","props","state","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB,C,CAEE;;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,8BAFS;AAGrBC,EAAAA,WAAW,EAAE,qCAHQ;AAIrBC,EAAAA,SAAS,EAAE,cAJU;AAKrBC,EAAAA,aAAa,EAAE,0BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE;AAPc,CAAvB,C,CASA;;AACAT,QAAQ,CAACU,aAAT,CAAuBR,cAAvB;;AAEA,MAAMS,KAAN,SAAoBZ,SAApB,CAA8B;AAE5Ba,EAAAA,KAAK,CAACC,KAAD,EAAO;AACV,UAAMC,KAAK,GAAG,KAAKC,IAAL,CAAUD,KAAV,CAAgBE,KAA9B;AACA,UAAMC,QAAQ,GAAG,KAAKF,IAAL,CAAUE,QAAV,CAAmBD,KAApC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmBG,QAAnB;AAEA,UAAMG,IAAI,GAAGpB,QAAQ,CAACoB,IAAT,EAAb;AAEA,UAAMC,OAAO,GAAGD,IAAI,CAACE,0BAAL,CAAgCR,KAAhC,EAAuCG,QAAvC,CAAhB;AAEAI,IAAAA,OAAO,CAACE,IAAR,CAAaC,IAAI,IAAI;AACnB,UAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAX,CADmB,CAGnB;;AACAF,MAAAA,IAAI,CAACG,SAAL,CAAeC,MAAf,CAAsB,MAAtB;AACD,KALD;AAOAR,IAAAA,OAAO,CAACS,KAAR,CAAcC,CAAC,IAAI;AACjB,UAAIC,GAAG,GAAGD,CAAC,CAACE,OAAZ;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACA,WAAKE,QAAL,CAAc;AAACF,QAAAA,GAAG,EAAEA;AAAN,OAAd;AACD,KAJD;AAKD;;AAEDG,EAAAA,MAAM,GAAE;AACN,UAAMrB,KAAK,GAAG,KAAKC,IAAL,CAAUD,KAAV,CAAgBE,KAA9B;AACA,UAAMC,QAAQ,GAAG,KAAKF,IAAL,CAAUE,QAAV,CAAmBD,KAApC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmBG,QAAnB;AAEA,UAAMG,IAAI,GAAGpB,QAAQ,CAACoB,IAAT,EAAb;AACA,UAAMC,OAAO,GAAGD,IAAI,CAACgB,8BAAL,CAAoCtB,KAApC,EAA2CG,QAA3C,CAAhB;AACAI,IAAAA,OAAO,CACNE,IADD,CACMC,IAAI,IAAI;AACZ,UAAIQ,GAAG,GAAG,aAAYlB,KAAtB;AACAd,MAAAA,QAAQ,CAACqC,QAAT,GAAoBC,GAApB,CAAwB,WAASd,IAAI,CAACe,GAAtC,EAA2CC,GAA3C,CAA+C;AAC7C1B,QAAAA,KAAK,EAAEA;AADsC,OAA/C;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,WAAKU,QAAL,CAAc;AAACF,QAAAA,GAAG,EAAEA;AAAN,OAAd;AACD,KARD;AASAX,IAAAA,OAAO,CACNS,KADD,CACOC,CAAC,IAAI;AACV,UAAIC,GAAG,GAAGD,CAAC,CAACE,OAAZ;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACA,WAAKE,QAAL,CAAe;AAACF,QAAAA,GAAG,EAAEA;AAAN,OAAf;AACD,KALD;AAOD;;AAEDS,EAAAA,MAAM,GAAE;AACNzC,IAAAA,QAAQ,CAACoB,IAAT,GAAgBsB,OAAhB;AACA,QAAIjB,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAX,CAFM,CAIN;;AACAF,IAAAA,IAAI,CAACG,SAAL,CAAee,GAAf,CAAmB,MAAnB;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN1B,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEA,QAAI0B,QAAQ,GAAG,IAAI7C,QAAQ,CAACoB,IAAT,CAAc0B,kBAAlB,EAAf;AACA,QAAIzB,OAAO,GAAGrB,QAAQ,CAACoB,IAAT,GAAgB2B,eAAhB,CAAgCF,QAAhC,CAAd;AAEAxB,IAAAA,OAAO,CAACE,IAAR,CAAcyB,MAAM,IAAI;AACtB,UAAIxB,IAAI,GAAGwB,MAAM,CAACxB,IAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY6B,MAAZ;AACAhD,MAAAA,QAAQ,CAACqC,QAAT,GAAoBC,GAApB,CAAwB,WAASd,IAAI,CAACe,GAAtC,EAA2CC,GAA3C,CAA+C;AAC7C1B,QAAAA,KAAK,EAAEU,IAAI,CAACV,KADiC;AAE7CmC,QAAAA,IAAI,EAAEzB,IAAI,CAAC0B;AAFkC,OAA/C;AAKD,KARD;AASA7B,IAAAA,OAAO,CAACS,KAAR,CAAcC,CAAC,IAAI;AACjB,UAAIoB,GAAG,GAAGpB,CAAC,CAACE,OAAZ;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYgC,GAAZ;AACD,KAHD;AAKD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXtB,MAAAA,GAAG,EAAE;AADM,KAAb;AAIA,SAAKpB,KAAL,GAAa,KAAKA,KAAL,CAAW2C,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKpB,MAAL,GAAc,KAAKA,MAAL,CAAYoB,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKd,MAAL,GAAc,KAAKA,MAAL,CAAYc,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKX,MAAL,GAAc,KAAKA,MAAL,CAAYW,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,EAAE,EAAC,OAApC;AAA4C,MAAA,GAAG,EAAC,OAAhD;AAAwD,MAAA,IAAI,EAAC,OAA7D;AAAqE,MAAA,WAAW,EAAC,kBAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAiC,MAAA,EAAE,EAAC,MAApC;AAA2C,MAAA,GAAG,EAAC,UAA/C;AAA0D,MAAA,IAAI,EAAC,UAA/D;AAA0E,MAAA,WAAW,EAAC,qBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWtB,GAAf,CARA,EASA;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKpB,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATA,EAUA;AAAQ,MAAA,OAAO,EAAE,KAAKuB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVA,EAWA;AAAQ,MAAA,OAAO,EAAE,KAAKM,MAAtB;AAA8B,MAAA,EAAE,EAAC,QAAjC;AAA0C,MAAA,SAAS,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXA,CADF,CADJ,CADF;AAmBD;;AAjH2B;;AAqH9B,eAAe9B,KAAf","sourcesContent":["import React, { Component } from 'react';\nvar firebase = require('firebase');\n\n  // Your web app's Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCUkh3vZCBcZqjfAnCRrQmV-W6KPYQ-VbM\",\n    authDomain: \"kimaia-5807f.firebaseapp.com\",\n    databaseURL: \"https://kimaia-5807f.firebaseio.com\",\n    projectId: \"kimaia-5807f\",\n    storageBucket: \"kimaia-5807f.appspot.com\",\n    messagingSenderId: \"169231303917\",\n    appId: \"1:169231303917:web:0913e201bfe5cc1d02b8e4\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  class Login extends Component {\n\n    login(event){\n      const email = this.refs.email.value;\n      const password = this.refs.password.value;\n      console.log(email, password);\n  \n      const auth = firebase.auth();\n  \n      const promise = auth.signInWithEmailAndPassword(email, password);\n  \n      promise.then(user => {\n        var lout = document.getElementById('logout');\n  \n        //Write a welcome message for user\n        lout.classList.remove('hide');\n      });\n  \n      promise.catch(e => {\n        var err = e.message;\n        console.log(err);\n        this.setState({err: err});\n      });\n    }\n  \n    signup(){\n      const email = this.refs.email.value;\n      const password = this.refs.password.value;\n      console.log(email, password);\n    \n      const auth = firebase.auth();\n      const promise = auth.createUserWithEmailAndPassword(email, password);\n      promise\n      .then(user => { \n        var err = \"Welcome \"+ email;\n        firebase.database().ref('users/'+user.uid).set({\n          email: email\n        });\n        console.log(user);\n        this.setState({err: err});\n      });\n      promise\n      .catch(e => {\n        var err = e.message;\n        console.log(err);\n        this.setState(({err: err}));\n      });\n    \n    }\n  \n    logout(){\n      firebase.auth().signOut();\n      var lout = document.getElementById('logout');\n  \n      //Write a thanks message for user\n      lout.classList.add('hide');\n    }\n  \n    google(){\n      console.log(\"I am in google method\");\n  \n      var provider = new firebase.auth.GoogleAuthProvider();\n      var promise = firebase.auth().signInWithPopup(provider);\n  \n      promise.then( result => {\n        var user = result.user;\n        console.log(result);\n        firebase.database().ref('users/'+user.uid).set({\n          email: user.email,\n          name: user.displayName\n        });\n  \n      });\n      promise.catch(e => {\n        var msg = e.message;\n        console.log(msg);\n      });\n  \n    }\n  \n    constructor(props){\n      super(props);\n  \n      this.state = {\n        err: ''\n      };\n  \n      this.login = this.login.bind(this);\n      this.signup = this.signup.bind(this);\n      this.logout = this.logout.bind(this);\n      this.google = this.google.bind(this);\n    }\n  \n    render(){\n      return(\n        <div className=\"login-box\">\n            <div className=\"login-inner form-group\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <input  className=\"form-control\" id=\"email\" ref=\"email\" type=\"email\" placeholder=\"Enter your email\" />\n                </div>\n                <div className=\"col\">\n                  <input className=\"form-control\"  id=\"pass\" ref=\"password\" type=\"password\" placeholder=\"Enter your password\" />\n                </div>\n              \n              <p>{this.state.err}</p>\n              <button className=\"btn btn-primary\" onClick={this.login}>Log In</button>\n              <button onClick={this.signup}>Sign Up</button>\n              <button onClick={this.logout} id=\"logout\" className=\"hide\">Log out</button>\n              </div>\n            </div>\n        </div>\n      );\n    }\n  }\n  \n  \n  export default Login;"]},"metadata":{},"sourceType":"module"}